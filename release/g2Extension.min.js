"use strict";
/**
 * @author Pascal Schnabel
 * @license MIT License
 * @requires g2.core.js
 * @requires g2.ext.js
 */g2.symbol=g2.symbol||{};g2.symbol.poldot=g2().cir({x:0,y:0,r:1.32,ls:"transparent",fs:"black"});g2.symbol.nodfill3="white";g2.symbol.pol=g2().cir({x:0,y:0,r:6,ls:"black",lw:1.5,fs:"white"}).use({grp:"poldot"});g2.symbol.Xcross=g2().lin({x1:5,y1:5,x2:-5,y2:-5}).lin({x1:5,y1:-5,x2:-5,y2:5});g2.symbol.gndlines=g2().lin({x1:-10,y1:-5,x2:-5,y2:0}).lin({x1:-5,y1:-5,x2:-0,y2:0}).lin({x1:-0,y1:-5,x2:5,y2:0}).lin({x1:5,y1:-5,x2:10,y2:0});g2.symbol.nodfix2=function(){const t=9,n=12;const l=g2().p().m({x:3,y:2}).l({x:-3,y:2}).l({x:-t,y:-n}).l({x:t,y:-n}).l({x:3,y:2}).z().stroke({ls:"black",lw:1.1,fs:"white"});const o=t*2/3;for(let s=-t+2;s<t+5;s+=o){let t=6;l.lin({x1:s,y1:-n,x2:s-t,y2:-n-t})}l.lin({x1:-t-3,y1:-n,x2:t+3,y2:-n});l.use({grp:"pol"});l.end();return l};g2.symbol.slider=function(){const t=g2();const s={b:32,h:16,fs:"white",lw:.8,label:{str:"default",loc:"ne",off:"15"}};return g2().rec({x:-s.b/2,y:-s.h/2,b:s.b,h:s.h,fs:"white"}).use({grp:"pol"}).end()};"use strict";
/**
 * @author Pascal Schnabel
 * @license MIT License
 * @requires g2.core.js
 * @requires g2.ext.js
 * @typedef {g2}
 * @description Mechanical extensions. (Requires cartesian coordinates)
 * @returns {g2}
 */g2.symbol.nodfill3="white";var g2=g2||{prototype:{}};g2.prototype.gndlines=function({x:t,y:s,w:n}){return this.addCommand({c:"gndlines",a:arguments[0]})};g2.prototype.gndlines.prototype={x:0,y:0,w:0,ds:[8,13],anz:4,g2(t){const{x:y,y:e,w:i,ls:x=g2.symbol.nodcolor,fs:s=g2.symbol.nodfill,lw:c=2,ds:n,anz:l}=this;const a=n[0];const r=n[1];const g=i-Math.PI/4*3;const h=g2();for(let o=0;o<l;o+=1){let t=y+o*a*Math.cos(i);let s=e+o*a*Math.sin(i);let n=t+r*Math.cos(g);let l=s+r*Math.sin(g);h.lin({x1:t,y1:s,x2:n,y2:l,ls:x,lw:c})}h.end();return h}};g2.prototype.nodfix2=function({x:t,y:s,w:n,scl:l}){return this.addCommand({c:"nodfix2",a:arguments[0]})};g2.prototype.nodfix2.prototype=g2.mixin(g2.ifc.point,g2.ifc.circular,g2.ifc.label,{x:0,y:0,w:0,scl:1,lbloc:"e",lboff:4,width:9,h:12,g2(t){const{x:s,y:n,w:l,h:o,scl:y,width:e,ls:i=g2.symbol.nodcolor,fs:x=g2.symbol.nodfill3,fs_2:c="#fefefe99"}=this;let a=g2().beg({x:s,y:n,scl:y,w:l}).lin({x1:-e-5,y1:-o,x2:e+5,y2:-o}).path({seg:[{c:"m",x:-3,y:2},{c:"l",x:-e,y:-o},{c:"l",x:e,y:-o},{c:"l",x:3,y:2},{c:"l",x:-3,y:2},{c:"z"}],ls:i,fs:x}).use({grp:"pol",x:0,y:0,scl:1});let r=e*2/3;for(let s=-e+2;s<e+5;s+=r){let t=6;a.lin({x1:s,y1:-o,x2:s-t,y2:-o-t})}a.end();return a}});g2.prototype.gndline=function({x1:t,x2:s,y1:n,y2:l,typ:o,ls:y}){return this.addCommand({c:"gndline",a:arguments[0]})};g2.prototype.gndline.prototype=g2.mixin(g2.ifc.line,{x1:0,y1:0,x2:100,y2:100,ls:"black",g2(t){const{x1:y,y1:e,x2:s,y2:n,lw:i=2,ls:x=g2.symbol.nodcolor,typ:l="out",anz:o=4,ds:c=[5,12]}=this;const a={x:s-y,y:n-e};const r=Math.atan2(a.y,a.x);const g=Math.sqrt(a.x*a.x+a.y*a.y);const h=g2();let d,p,f;switch(l){case"mid":d=(g-8*(o+1)/2-g/2)/g;p={x:y+Math.cos(r)*g*d,y:e+Math.sin(r)*g*d};h.gndlines({x:p.x,y:p.y,w:r,ls:x,lw:i,anz:o});break;case"out":d=(g-8*(o+1)/2-g/2)/g;p={x:y+Math.cos(r)*c[0]*(o-2),y:e+Math.sin(r)*c[0]*(o-2)};f={x:s-Math.cos(r)*c[0]*o,y:n-Math.sin(r)*c[0]*o};h.gndlines({x:p.x,y:p.y,w:r,ls:x,lw:i,anz:o,ds:c});h.gndlines({x:f.x,y:f.y,w:r,ls:x,lw:i,anz:o,ds:c});break;case"full":const w=c[0];const b=c[1];const M=r-Math.PI/4*3;let t=g/w-2;for(let o=0;o<t;o+=1){let t=y+(o*w+w)*Math.cos(r);let s=e+(o*w+w)*Math.sin(r);let n=t+b*Math.cos(M);let l=s+b*Math.sin(M);h.lin({x1:t,y1:s,x2:n,y2:l,ls:x,lw:i})}break;default:d=4*3/g;p={x:y+Math.cos(r)*g*d,y:e+Math.sin(r)*g*d};const u=(g-6*5)/g;f={x:y+Math.cos(r)*g*u,y:e+Math.sin(r)*g*u};h.gndlines({x:p.x,y:p.y,w:r,ls:x,lw:i});h.gndlines({x:f.x,y:f.y,w:r,ls:x,lw:i});break}return h.lin({x1:y,y1:e,x2:s,y2:n,lw:i*2,label:this.label===undefined?"":this.label})}});g2.prototype.guide=function({x1:t,x2:s,y1:n,y2:l,w:o,ls:y}){return this.addCommand({c:"guide",a:arguments[0]})};g2.prototype.guide.prototype=g2.mixin(g2.ifc.line,g2.ifc.label,{lbloc:"w",lboff:4,g2(t){const{x1:s,y1:n,x2:l,y2:o,lw:y=1,ls:e=g2.symbol.nodcolor,anz:i=4,ds:x=[5,10]}=this;let c,a,r,g;if(this.w===undefined){a={x:l-s,y:o-n};r=Math.atan2(a.y,a.x)}else{g=Object.getOwnPropertyDescriptor(this,"len")?this.len:100;r=this.w;a={x:g*Math.cos(r),y:Math.sin(r)*g};const M=Math.atan2(a.y,a.x)}const h=Object.getOwnPropertyDescriptor(this,"width")?this.width:24;const d={x:s-Math.sin(r)*h/2,y:n+Math.cos(r)*h/2};const p={x:d.x+a.x,y:d.y+a.y};const f={x:s+Math.sin(r)*h/2,y:n-Math.cos(r)*h/2};const w={x:f.x+a.x,y:f.y+a.y};const b=g2().beg({ls:e}).gndline({x1:p.x,y1:p.y,x2:d.x,y2:d.y,lw:y,ds:x,anz:i,typ:"out"}).gndline({x1:f.x,y1:f.y,x2:w.x,y2:w.y,lw:y,ds:x,anz:i,typ:"out"}).end();return b}});g2.prototype.Ecke=function({p1:t,p2:s,p3:n,w:l,ls:o}){return this.addCommand({c:"Ecke",a:arguments[0]})};g2.prototype.Ecke.prototype=g2.mixin(g2.ifc.label,{lbloc:"e",lboff:2,g2(t){const{p1:s,p2:n,p3:l,ls:o="black",size:y=45,side:e=1,fs:i="transparent"}=this;const x=Math.atan2(s.y-n.y,s.x-n.x);const c=Math.atan2(l.y-n.y,l.x-n.x);let a=c-x;if(e<1)a=2*Math.PI-a;const r=g2().beg({x:n.x,y:n.y,w:Math.atan2(s.y-n.y,s.x-n.x)});r.p().m({x:y,y:0}).q({x1:0,y1:0,x:y*Math.cos(a*e),y:y*Math.sin(a*e)}).l({x:0,y:0}).l({x:y,y:0}).z().fill({fs:i,ls:o});r.end();return r}});g2.prototype.corner=function({p1:t,p2:s,p:n,w:l,ls:o,r:y}){return this.addCommand({c:"corner",a:arguments[0]})};g2.prototype.corner.prototype={lbloc:"e",lboff:2,g2(t){const{p1:s,p2:n,p:l,lw:o=1,ls:y=g2.symbol.nodcolor,anz:e=4,size:i=20,fs:x="black",side:c=1,r:a=20}=this;const r=this.wref1===undefined?Math.atan2(-s.x+l.x,-s.y+l.y):this.wref1.w;const g=this.wref2===undefined?Math.atan2(-n.x+l.x,-n.y+l.y):this.wref2.w;let h=(g-r+Math.PI*2)%Math.PI;if(this.side<1){h=-h}console.log(`dw:${h*180/Math.PI}`);const d={x:l.x+-Math.cos(r)*a,y:-Math.sin(r)*a+l.y};const p={x:l.x+Math.cos(g)*a,y:Math.sin(g)*a+l.y};const f=g2();f.p().m({x:l.x,y:l.y}).l({x:d.x,y:d.y}).a({dw:(g-r)*c,x:p.x,y:p.y}).l({x:l.x,y:l.y}).z().stroke();f.cir({x:d.x,y:d.y,r:5,ls:"red"});f.cir({x:p.x,y:p.y,r:5,ls:"green"});return f}};