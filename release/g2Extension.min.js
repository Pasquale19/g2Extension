"use strict";
/**
 * @author Pascal Schnabel
 * @license MIT License
 * @requires g2.core.js
 * @requires g2.ext.js
 */g2.symbol=g2.symbol||{};g2.symbol.poldot=g2().cir({x:0,y:0,r:1.32,ls:"transparent",fs:"black"});g2.symbol.nodfill3="white";g2.symbol.pol=g2().cir({x:0,y:0,r:6,ls:"black",lw:1.5,fs:"white"}).use({grp:"poldot"});g2.symbol.Xcross=g2().lin({x1:5,y1:5,x2:-5,y2:-5}).lin({x1:5,y1:-5,x2:-5,y2:5});g2.symbol.gndlines=g2().lin({x1:-10,y1:-5,x2:-5,y2:0}).lin({x1:-5,y1:-5,x2:-0,y2:0}).lin({x1:-0,y1:-5,x2:5,y2:0}).lin({x1:5,y1:-5,x2:10,y2:0});g2.symbol.slider=function(){const t=g2();const n={b:32,h:16,fs:"white",lw:.8,label:{str:"default",loc:"ne",off:"15"}};return g2().rec({x:-n.b/2,y:-n.h/2,b:n.b,h:n.h,fs:"white"}).use({grp:"pol"}).end()};"use strict";
/**
 * @author Pascal Schnabel
 * @license MIT License
 * @requires g2.core.js
 * @requires g2.ext.js
 *  * @requires g2ExtraSymbols.js
 * @typedef {g2}
 * @description Mechanical extensions. (Requires cartesian coordinates)
 * @returns {g2}
 */g2.symbol.nodfill3="white";var g2=g2||{prototype:{}};g2.prototype.gndlines=function({x:t,y:n,w:s,anz:l,ds:o}){return this.addCommand({c:"gndlines",a:arguments[0]})};g2.prototype.gndlines.prototype={x:0,y:0,w:0,g2(t){const{x:e,y,w:i,ls:a=g2.symbol.nodcolor,fs:n=g2.symbol.nodfill,lw:x=2,ds:s=[8,13],anz:l=4}=this;const c=s[0];const r=s[1];const g=i-Math.PI/4*3;const h=g2();for(let o=0;o<l;o+=1){let t=e+o*c*Math.cos(i);let n=y+o*c*Math.sin(i);let s=t+r*Math.cos(g);let l=n+r*Math.sin(g);h.lin({x1:t,y1:n,x2:s,y2:l,ls:a,lw:x})}h.end();return h}};g2.prototype.nodfix2=function({x:t,y:n,w:s,scl:l}){return this.addCommand({c:"nodfix2",a:arguments[0]})};g2.prototype.nodfix2.prototype=g2.mixin(g2.ifc.point,g2.ifc.circular,g2.ifc.label,{x:0,y:0,w:0,scl:1,lbloc:"e",lboff:4,width:9,h:12,g2(t){const{x:n,y:s,w:l,h:o,scl:e,width:y,ls:i=g2.symbol.nodcolor,fs:a=g2.symbol.nodfill3,fs_2:x="#fefefe99"}=this;let c=g2().beg({x:n,y:s,scl:e,w:l}).lin({x1:-y-5,y1:-o,x2:y+5,y2:-o}).path({seg:[{c:"m",x:-3,y:2},{c:"l",x:-y,y:-o},{c:"l",x:y,y:-o},{c:"l",x:3,y:2},{c:"l",x:-3,y:2},{c:"z"}],ls:i,fs:a}).use({grp:"pol",x:0,y:0,scl:1});let r=y*2/3;for(let n=-y+2;n<y+5;n+=r){let t=6;c.lin({x1:n,y1:-o,x2:n-t,y2:-o-t})}c.end();return c}});g2.prototype.gndline=function({x1:t,x2:n,y1:s,y2:l,typ:o,ls:e,ds:y,anz:i}){return this.addCommand({c:"gndline",a:arguments[0]})};g2.prototype.gndline.prototype=g2.mixin(g2.ifc.line,g2.ifc.label,{x1:0,y1:0,x2:100,y2:100,g2(t){const{x1:e,y1:y,x2:n,y2:s,lw:i=2,ls:a=g2.symbol.nodcolor,typ:l="out",anz:o=4,ds:x=[5,12]}=this;const c={x:n-e,y:s-y};const r=Math.atan2(c.y,c.x);const g=Math.sqrt(c.x*c.x+c.y*c.y);const h=g2();let d,p,f;switch(l){case"mid":d=(g-8*(o+1)/2-g/2)/g;p={x:e+Math.cos(r)*g*d,y:y+Math.sin(r)*g*d};h.gndlines({x:p.x,y:p.y,w:r,ls:a,lw:i,anz:o});break;case"out":d=(g-8*(o+1)/2-g/2)/g;p={x:e+Math.cos(r)*x[0]*(o-2),y:y+Math.sin(r)*x[0]*(o-2)};f={x:n-Math.cos(r)*x[0]*o,y:s-Math.sin(r)*x[0]*o};h.gndlines({x:p.x,y:p.y,w:r,ls:a,lw:i,anz:o,ds:x});h.gndlines({x:f.x,y:f.y,w:r,ls:a,lw:i,anz:o,ds:x});break;case"full":const w=x[0];const b=x[1];const M=r-Math.PI/4*3;let t=g/w-2;for(let o=0;o<t;o+=1){let t=e+(o*w+w)*Math.cos(r);let n=y+(o*w+w)*Math.sin(r);let s=t+b*Math.cos(M);let l=n+b*Math.sin(M);h.lin({x1:t,y1:n,x2:s,y2:l,ls:a,lw:i})}break;default:d=4*3/g;p={x:e+Math.cos(r)*g*d,y:y+Math.sin(r)*g*d};const u=(g-6*5)/g;f={x:e+Math.cos(r)*g*u,y:y+Math.sin(r)*g*u};h.gndlines({x:p.x,y:p.y,w:r,ls:a,lw:i});h.gndlines({x:f.x,y:f.y,w:r,ls:a,lw:i});break}return h.lin({x1:e,y1:y,x2:n,y2:s,lw:i*2,label:this.label===undefined?"":this.label})}});g2.prototype.guide=function({x1:t,x2:n,y1:s,y2:l,w:o,ls:e}){return this.addCommand({c:"guide",a:arguments[0]})};g2.prototype.guide.prototype=g2.mixin(g2.ifc.line,g2.ifc.label,{lbloc:"w",lboff:4,g2(t){const{x1:n,y1:s,x2:l,y2:o,lw:e=1,ls:y=g2.symbol.nodcolor,anz:i=4,ds:a=[5,10]}=this;let x,c,r,g;if(this.w===undefined){c={x:l-n,y:o-s};r=Math.atan2(c.y,c.x)}else{g=Object.getOwnPropertyDescriptor(this,"len")?this.len:100;r=this.w;c={x:g*Math.cos(r),y:Math.sin(r)*g};const M=Math.atan2(c.y,c.x)}const h=Object.getOwnPropertyDescriptor(this,"width")?this.width:24;const d={x:n-Math.sin(r)*h/2,y:s+Math.cos(r)*h/2};const p={x:d.x+c.x,y:d.y+c.y};const f={x:n+Math.sin(r)*h/2,y:s-Math.cos(r)*h/2};const w={x:f.x+c.x,y:f.y+c.y};const b=g2().beg({ls:y}).gndline({x1:p.x,y1:p.y,x2:d.x,y2:d.y,lw:e,ds:a,anz:i,typ:"out"}).gndline({x1:f.x,y1:f.y,x2:w.x,y2:w.y,lw:e,ds:a,anz:i,typ:"out"}).end();return b}});g2.prototype.Ecke=function({p1:t,p2:n,p3:s,w:l,ls:o}){return this.addCommand({c:"Ecke",a:arguments[0]})};g2.prototype.Ecke.prototype=g2.mixin(g2.ifc.label,{lbloc:"e",lboff:2,g2(t){const{p1:n,p2:s,p3:l,ls:o="black",size:e=45,side:y=1,fs:i="transparent"}=this;const a=Math.atan2(n.y-s.y,n.x-s.x);const x=Math.atan2(l.y-s.y,l.x-s.x);let c=x-a;if(y<1)c=2*Math.PI-c;const r=g2().beg({x:s.x,y:s.y,w:Math.atan2(n.y-s.y,n.x-s.x)});r.path({seg:[{c:"m",x:e,y:0},{c:"q",x:e*Math.cos(c*y),y:e*Math.sin(c*y)},{x1:0,y1:0},{c:"l",x:0,y:0},{c:"l",x:e,y:0},{c:"z"},o,i]});r.end();return r}});g2.prototype.angle=function({p1:t,p2:n,p:s,w:l,ls:o,r:e}){return this.addCommand({c:"angle",a:arguments[0]})};g2.prototype.angle.prototype={lbloc:"e",lboff:2,g2(t){const{p1:n,p2:s,p:l,lw:o=1,ls:e=g2.symbol.nodcolor,anz:y=4,size:i=20,fs:a="transparent",side:x=1,r:c=20}=this;const r=this.wref1===undefined?Math.PI+Math.atan2(n.y-l.y,n.x-l.x):this.wref1.w;const g=this.wref2===undefined?Math.PI+Math.atan2(s.y-l.y,s.x-l.x):this.wref2.w;let h=(g-r)%(2*Math.PI);const d={x:l.x+Math.cos(r)*c,y:Math.sin(r)*c+l.y};const p={x:l.x+Math.cos(g)*c,y:Math.sin(g)*c+l.y};const f=g2().beg({fs:a,ls:e});f.p().m({x:l.x,y:l.y}).l({x:d.x,y:d.y}).a({dw:h,x:p.x,y:p.y}).l({x:l.x,y:l.y}).z().fill(a);f.cir({p:l,label:{str:`${Math.round(180/Math.PI*h)}°`}});f.lin({p1:l,p2:d});f.arc({p:l,r:c,w:r,dw:h,label:{str:"@angle;°"}});f.lin({p1:l,p2:p});f.end();return f}};